{
  "artifacts": [],
  "command": "my_main",
  "experiment": {
    "base_dir": "/home/bhuv/Documents/bhuv-diffusion/epymarl/src",
    "dependencies": [
      "numpy==1.24.4",
      "PyYAML==5.3.1",
      "sacred==0.8.6",
      "torch==2.4.1"
    ],
    "mainfile": "main.py",
    "name": "pymarl",
    "repositories": [
      {
        "commit": "5c7a19d0448eac3218d356f6776c04f676dff437",
        "dirty": true,
        "url": "https://github.com/bhuvvaan/epymarl-rware.git"
      },
      {
        "commit": "5c7a19d0448eac3218d356f6776c04f676dff437",
        "dirty": true,
        "url": "https://github.com/bhuvvaan/epymarl-rware.git"
      },
      {
        "commit": "5c7a19d0448eac3218d356f6776c04f676dff437",
        "dirty": true,
        "url": "https://github.com/bhuvvaan/epymarl-rware.git"
      }
    ],
    "sources": [
      [
        "main.py",
        "_sources/main_b2cc1db06d11795e4f8cf6a3b0165fa1.py"
      ],
      [
        "run.py",
        "_sources/run_29fd448eb2929a57e5fd2547c431175b.py"
      ],
      [
        "utils/logging.py",
        "_sources/logging_80685d67fab61f6e71e93fbe28085531.py"
      ]
    ]
  },
  "fail_trace": [
    "Traceback (most recent call last):\n",
    "  File \"/home/bhuv/Documents/bhuv-diffusion/epymarl/epymarl_env/lib/python3.8/site-packages/sacred/config/captured_function.py\", line 42, in captured_function\n    result = wrapped(*args, **kwargs)\n",
    "  File \"src/main.py\", line 44, in my_main\n    run(_run, config, _log)\n",
    "  File \"/home/bhuv/Documents/bhuv-diffusion/epymarl/src/run.py\", line 67, in run\n    run_sequential(args=args, logger=logger)\n",
    "  File \"/home/bhuv/Documents/bhuv-diffusion/epymarl/src/run.py\", line 213, in run_sequential\n    learner.train(episode_sample, runner.t_env, episode)\n",
    "  File \"/home/bhuv/Documents/bhuv-diffusion/epymarl/src/learners/ppo_learner.py\", line 82, in train\n    agent_outs = self.mac.forward(batch, t=t)\n",
    "  File \"/home/bhuv/Documents/bhuv-diffusion/epymarl/src/controllers/basic_controller.py\", line 29, in forward\n    agent_outs, self.hidden_states = self.agent(agent_inputs, self.hidden_states)\n",
    "  File \"/home/bhuv/Documents/bhuv-diffusion/epymarl/epymarl_env/lib/python3.8/site-packages/torch/nn/modules/module.py\", line 1553, in _wrapped_call_impl\n    return self._call_impl(*args, **kwargs)\n",
    "  File \"/home/bhuv/Documents/bhuv-diffusion/epymarl/epymarl_env/lib/python3.8/site-packages/torch/nn/modules/module.py\", line 1562, in _call_impl\n    return forward_call(*args, **kwargs)\n",
    "  File \"/home/bhuv/Documents/bhuv-diffusion/epymarl/src/modules/agents/rnn_agent.py\", line 27, in forward\n    h = self.rnn(x, h_in)\n",
    "  File \"/home/bhuv/Documents/bhuv-diffusion/epymarl/epymarl_env/lib/python3.8/site-packages/torch/nn/modules/module.py\", line 1553, in _wrapped_call_impl\n    return self._call_impl(*args, **kwargs)\n",
    "  File \"/home/bhuv/Documents/bhuv-diffusion/epymarl/epymarl_env/lib/python3.8/site-packages/torch/nn/modules/module.py\", line 1562, in _call_impl\n    return forward_call(*args, **kwargs)\n",
    "  File \"/home/bhuv/Documents/bhuv-diffusion/epymarl/epymarl_env/lib/python3.8/site-packages/torch/nn/modules/rnn.py\", line 1477, in forward\n    ret = _VF.gru_cell(\n",
    "torch.OutOfMemoryError: CUDA out of memory. Tried to allocate 20.00 MiB. GPU 0 has a total capacity of 7.79 GiB of which 56.06 MiB is free. Including non-PyTorch memory, this process has 7.26 GiB memory in use. Of the allocated memory 7.11 GiB is allocated by PyTorch, and 24.32 MiB is reserved by PyTorch but unallocated. If reserved but unallocated memory is large try setting PYTORCH_CUDA_ALLOC_CONF=expandable_segments:True to avoid fragmentation.  See documentation for Memory Management  (https://pytorch.org/docs/stable/notes/cuda.html#environment-variables)\n"
  ],
  "heartbeat": "2025-01-29T02:18:17.750609",
  "host": {
    "ENV": {},
    "cpu": "AMD Ryzen 7 3700X 8-Core Processor",
    "gpus": {
      "driver_version": "535.216.03",
      "gpus": [
        {
          "model": "NVIDIA GeForce RTX 2070 SUPER",
          "persistence_mode": true,
          "total_memory": 8192
        }
      ]
    },
    "hostname": "lorin-cairo",
    "os": [
      "Linux",
      "Linux-5.15.0-130-generic-x86_64-with-glibc2.29"
    ],
    "python_version": "3.8.10"
  },
  "meta": {
    "command": "my_main",
    "config_updates": {
      "common_reward": true,
      "env_args": {
        "key": "marl:rware-tiny-4ag-v2",
        "time_limit": 500
      },
      "save_model": true
    },
    "named_configs": [],
    "options": {
      "--beat-interval": null,
      "--capture": null,
      "--comment": null,
      "--debug": false,
      "--enforce_clean": false,
      "--file_storage": null,
      "--force": false,
      "--help": false,
      "--id": null,
      "--loglevel": null,
      "--mongo_db": null,
      "--name": null,
      "--pdb": false,
      "--print-config": false,
      "--priority": null,
      "--queue": false,
      "--s3": null,
      "--sql": null,
      "--tiny_db": null,
      "--unobserved": false,
      "COMMAND": null,
      "UPDATE": [
        "env_args.time_limit=500",
        "env_args.key=marl:rware-tiny-4ag-v2",
        "save_model=True",
        "common_reward=True"
      ],
      "help": false,
      "with": true
    }
  },
  "resources": [],
  "result": null,
  "start_time": "2025-01-29T02:15:56.003708",
  "status": "FAILED",
  "stop_time": "2025-01-29T02:18:17.753540"
}